// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Stopaj_Data.Context;

namespace Stopaj_Data.Migrations
{
    [DbContext(typeof(EntityContext))]
    partial class EntityContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn)
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            modelBuilder.Entity("Stopaj_Data.Entity.Log", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("LogTypeId")
                        .HasColumnType("integer");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("Logs");
                });

            modelBuilder.Entity("Stopaj_Data.Entity.LogType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("LogTypes");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 991, DateTimeKind.Local).AddTicks(9596),
                            Name = "Login"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 992, DateTimeKind.Local).AddTicks(542),
                            Name = "SendMail"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 992, DateTimeKind.Local).AddTicks(603),
                            Name = "SendSMS"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 992, DateTimeKind.Local).AddTicks(608),
                            Name = "DownloadPDF"
                        },
                        new
                        {
                            Id = 5,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 992, DateTimeKind.Local).AddTicks(612),
                            Name = "ChangePhone"
                        },
                        new
                        {
                            Id = 6,
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 992, DateTimeKind.Local).AddTicks(616),
                            Name = "Error"
                        });
                });

            modelBuilder.Entity("Stopaj_Data.Entity.Role", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Roles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedBy = 2,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 967, DateTimeKind.Local).AddTicks(7021),
                            Name = "Dealer"
                        },
                        new
                        {
                            Id = 2,
                            CreatedBy = 2,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 969, DateTimeKind.Local).AddTicks(6788),
                            Name = "CallCenterAdmin"
                        },
                        new
                        {
                            Id = 3,
                            CreatedBy = 2,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 969, DateTimeKind.Local).AddTicks(6858),
                            Name = "SporToto"
                        },
                        new
                        {
                            Id = 4,
                            CreatedBy = 2,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 969, DateTimeKind.Local).AddTicks(6863),
                            Name = "CallCenter"
                        });
                });

            modelBuilder.Entity("Stopaj_Data.Entity.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<string>("Address")
                        .HasColumnType("text");

                    b.Property<string>("City")
                        .HasColumnType("text");

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int?>("DealerId")
                        .HasColumnType("integer");

                    b.Property<string>("DealerName")
                        .HasColumnType("text");

                    b.Property<string>("Email")
                        .HasColumnType("text");

                    b.Property<string>("FullName")
                        .HasColumnType("text");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Password")
                        .HasColumnType("text");

                    b.Property<string>("Phone")
                        .HasColumnType("text");

                    b.Property<int>("RoleId")
                        .HasColumnType("integer");

                    b.Property<int>("UpdatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "test sk",
                            City = "İstanbul",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 990, DateTimeKind.Local).AddTicks(5529),
                            DealerId = 11111,
                            DealerName = "iddaa bayisi",
                            Email = "test@gmail.com",
                            FullName = "test1",
                            IsActive = true,
                            Password = "013456",
                            Phone = "5552223333",
                            RoleId = 1,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 991, DateTimeKind.Local).AddTicks(3996)
                        },
                        new
                        {
                            Id = 2,
                            Address = "test sk",
                            City = "İstanbul",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 991, DateTimeKind.Local).AddTicks(6525),
                            FullName = "Çağrı merkezi admin",
                            IsActive = true,
                            Password = "013456",
                            Phone = "5558883333",
                            RoleId = 2,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 991, DateTimeKind.Local).AddTicks(6714)
                        },
                        new
                        {
                            Id = 3,
                            Address = "test sk",
                            City = "İstanbul",
                            CreatedBy = 1,
                            CreatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 991, DateTimeKind.Local).AddTicks(6768),
                            DealerId = 3,
                            DealerName = "SporToto ekranı",
                            Email = "test@gmail.com",
                            FullName = "SporToto",
                            IsActive = true,
                            Password = "013456",
                            Phone = "5552223333",
                            RoleId = 3,
                            UpdatedBy = 1,
                            UpdatedDate = new DateTime(2020, 7, 10, 13, 14, 33, 991, DateTimeKind.Local).AddTicks(6827)
                        });
                });

            modelBuilder.Entity("Stopaj_Data.Entity.UserFilePath", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

                    b.Property<int?>("CreatedBy")
                        .HasColumnType("integer");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<int>("DealerId")
                        .HasColumnType("integer");

                    b.Property<DateTime>("FileDate")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("Path")
                        .HasColumnType("text");

                    b.Property<int>("SftpId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("UserFilePaths");
                });
#pragma warning restore 612, 618
        }
    }
}
